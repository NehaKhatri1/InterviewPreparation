package sparkWordCount;


import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;
import scala.Tuple2;

import java.util.Arrays;

/**
 * 
 * @author Neha
 * 
 * input file 
 * 
 * hi i m neha 
i live my family
nice talking to u
hi how r u?
 * 
 * 
 * 
 * Output file :
 * 
 * (hi,2)
(family,1)
(i,2)
(how,1)
(u,1)
(with,1)
(neha,1)
(to,1)
(live,1)
(nice,1)
(my,1)
(u?,1)
(r,1)
(talking,1)
(m,1)

 * 
 * 
 * 
 * command :
 * spark-submit --class sparkWordCount.WordCounter --master local /home/cloudera/Desktop/sparkWordCount.jar /user/spark/sparkWordcount/hello.txt /user/spark/sparkWordcount/sparkoutput

 * Finally, we run reduce, which is an action. At this point Spark breaks the computation into tasks to run on separate machines, and each machine runs both its part of the map and a local reduction, returning only its answer to the driver program.
 */



public class WordCounter {
	
	///usr/lib/spark/bin/spark-submit --class com.javaeight.poc.WordCounter --master localhost --deploy-mode client SparkRun.jar /home/cloudera/Downloads/hello.txt 

    private static void wordCount(String fileName) {
    	
    	System.out.println("entered the word count method");
    	
    	fileName = "/tmp/run/hello1.txt";

       SparkConf sparkConf = new SparkConf().setMaster("local").setAppName("Spark code two");

        //SparkConf sparkConf = new SparkConf().setMaster("yarn").setAppName("Spark code two");

        
        JavaSparkContext sparkContext = new JavaSparkContext(sparkConf);

        JavaRDD<String> lines = sparkContext.textFile(fileName);

        JavaRDD<String> wordsInLine = lines.flatMap(content -> Arrays.asList(content.split(" ")).iterator());

        JavaPairRDD countData = wordsInLine.mapToPair(t -> new Tuple2(t, 1)).reduceByKey((x, y) -> (int) x + (int) y);

        countData.saveAsTextFile("/tmp/run/sparkoutput");
        
        sparkContext.stop();
    }

    public static void main(String[] args) {

       /* if (args.length == 0) {
            System.out.println("No files provided.");
            System.exit(0);
        }*/

      //  wordCount("/user/cloudera/spark/sparkWordCount/hello");
        wordCount("/tmp/run/hello1.txt");
    }
}



/**
 * ______-----------------output ------------------------------------
(hi,2)
(family,1)
(i,2)
(how,1)
(u,1)
(with,1)
(neha,1)
(to,1)
(live,1)
(nice,1)
(my,1)
(u?,1)
(r,1)
(talking,1)
(m,1)
-------------------------------------------------------------------------
 * 
 */


